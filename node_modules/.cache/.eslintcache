[{"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\index.js":"1","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\reportWebVitals.js":"2","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\home-page\\HomePage.jsx":"3","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\recipe-page\\RecipePage.jsx":"4","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\sign-in\\SignIn.jsx":"5","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\navbar\\Navbar.jsx":"6","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\sign-up\\SignUp.jsx":"7","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\my-account\\MyAccount.jsx":"8","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\category\\RecipeCategory.jsx":"9","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\add-from\\AddForm.jsx":"10","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\recipe-item\\RecipeItem.jsx":"11","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\App.js":"12","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\logout\\Logout.jsx":"13","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\edit-form\\EditForm.jsx":"14"},{"size":323,"mtime":1697540343729,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1697122586540,"results":"17","hashOfConfig":"16"},{"size":372,"mtime":1699399826614,"results":"18","hashOfConfig":"16"},{"size":1507,"mtime":1699399271121,"results":"19","hashOfConfig":"16"},{"size":1897,"mtime":1698876580182,"results":"20","hashOfConfig":"16"},{"size":441,"mtime":1698875828748,"results":"21","hashOfConfig":"16"},{"size":2014,"mtime":1698876534599,"results":"22","hashOfConfig":"16"},{"size":2859,"mtime":1698936784361,"results":"23","hashOfConfig":"16"},{"size":1181,"mtime":1698875496423,"results":"24","hashOfConfig":"16"},{"size":5037,"mtime":1699048782052,"results":"25","hashOfConfig":"16"},{"size":1998,"mtime":1698937644234,"results":"26","hashOfConfig":"16"},{"size":1146,"mtime":1699049706316,"results":"27","hashOfConfig":"16"},{"size":112,"mtime":1698604791524,"results":"28","hashOfConfig":"16"},{"size":6909,"mtime":1699048598610,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1jm6ecz",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\index.js",[],[],["81"],"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\reportWebVitals.js",[],[],"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\home-page\\HomePage.jsx",[],[],"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\recipe-page\\RecipePage.jsx",["82","83","84"],[],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './recipe-page.css'\r\n\r\nexport default function RecipePage() {\r\n  //change url to get a specific recipe\r\n  const queryParameters = new URLSearchParams(window.location.search)\r\n  const recipe_id = queryParameters.get('recipe_id')\r\n\r\n  const recipeUrl = 'https://api-recipes.luanabuca.com/recipes/public/'+recipe_id;\r\n\r\n  //get recipe details\r\n  const [recipe, setRecipe] = useState([]);\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(recipeUrl, options)\r\n     .then(response => response.json())\r\n     .then(data => {\r\n      setRecipe(data['payload']['recipe']);\r\n     })\r\n     .catch(error => console.error(error));\r\n  }, [])\r\n\r\n  return (\r\n   <div className='recipe-container'>\r\n    <a href=\"/\">&larr; Go back to home page</a>\r\n    <h1>{recipe.title}</h1>\r\n    <ul>\r\n      <li>Category: {recipe.category && \r\n        <a href={\"#\"} onClick={() => window.location.replace('/?category_id='+recipe.category.id)}>{recipe.category.name}</a>\r\n      }</li>\r\n      <li>Author: {recipe.user && recipe.user.name}</li>\r\n      <li>Complexity: {recipe.complexity}</li>\r\n    </ul>\r\n    <img id='recipe-img' src={recipe.image} alt='recipe photo' width='100%'/>\r\n    {recipe.description && \r\n        <div id='recipe-description'>\r\n          {recipe.description.split('\\n').map(str => <p>{str}</p>)}\r\n        </div>\r\n    }\r\n   </div>\r\n  )\r\n}\r\n","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\sign-in\\SignIn.jsx",["85"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './sign-in.css'\r\n\r\nexport default function SignIn(){\r\n  //function to get into your account\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function handleLogin(){\r\n    const auth = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    \r\n    //post request for login, checks username and pass and gets token\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(auth)\r\n    };\r\n\r\n    fetch('https://api-recipes.luanabuca.com/auth/login', options)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        if(data.error===1){\r\n          alert ('Wrong username or password');\r\n        }else{\r\n          //alert('You are in');\r\n          localStorage.setItem('token',data.jwt);\r\n          window.location.replace('/my-account');\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h1 id='sign-in-title'>Sign In</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"username\">Username: </label>\r\n        <input type=\"text\" id='username' className='input-item' onChange={(e) => {setUsername(e.target.value)}} placeholder='Username' />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"password\">Password: </label>\r\n        <input type=\"password\" id='password' className='input-item' onChange={(e) => {setPassword(e.target.value)}} placeholder='Password' />\r\n      </div>\r\n\r\n      <div>\r\n        <input type=\"button\" id='sign-in-btn' onClick={handleLogin} value={'Login'} />\r\n      </div>\r\n\r\n      <p>\r\n        <Link to='../sign-up'>Don't have an account yet? Click here to create one!</Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\n","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\navbar\\Navbar.jsx",[],[],"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\sign-up\\SignUp.jsx",[],[],"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\my-account\\MyAccount.jsx",["86","87","88","89","90","91"],[],"import React, {useState, useEffect} from 'react';\r\nimport './my-account.css';\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\n export default function MyAccount() {\r\n\r\n  //check token\r\n  if(localStorage.getItem('token')==null){\r\n    window.location.replace('/sign-in');\r\n  }\r\n  const user = jwtDecode(localStorage.getItem('token'));\r\n\r\n  //user type\r\n  let userType = '';\r\n  if(user.type_id==1){\r\n    userType = 'an administrator';\r\n  }\r\n\r\n  if(user.type_id==2){\r\n    userType = 'a regular user';\r\n  }\r\n\r\n  //go to add form\r\n  function handleAddButton(){\r\n    window.location.replace('/add-form');\r\n  }\r\n\r\n  //get recipes\r\n  const recipeUrl = 'https://api-recipes.luanabuca.com/recipes/search'\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'jwt' : localStorage.getItem('token')\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(recipeUrl, options)\r\n         .then(response => response.json())\r\n         .then(data => {\r\n        setRecipes(data['payload']['recipes']);\r\n      })\r\n      .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    //go to edit form\r\n    function handleRecipeEdit(recipeId){\r\n      window.location.replace('/edit-form?recipeId='+recipeId);\r\n    }\r\n\r\n    //delete confirmation\r\n    function handleRecipeDelete(id){\r\n      if(window.confirm('Are you sure you want to delete this recipe?') == true){\r\n        // alert('It has been confirmed')\r\n        const optionsDelete = {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'jwt': localStorage.getItem('token')\r\n          }\r\n        };\r\n        fetch('https://api-recipes.luanabuca.com/recipes/'+id, optionsDelete)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            window.location.reload();\r\n          })\r\n          .catch(error => console.log(error));\r\n      }\r\n    }\r\n    \r\n\r\n  return (\r\n    <div className='my-account'>\r\n\r\n      <h2>My Account</h2>\r\n      <h3 id='hello-text'>Hello {user.name}</h3>\r\n      <button id='add-btn' onClick={handleAddButton}>Add recipe</button>\r\n        <div id='p-div'>\r\n          Here are the recipes you can manage as {userType}.\r\n        </div>\r\n\r\n        {recipes.map(recipe => (\r\n            <div id='recipe-box' key={recipe.id}>\r\n                <h4>{recipe.title}</h4>\r\n                {recipe.user && \r\n                  <div>\r\n                    <p id='recipe-owner'> Added by {recipe.user.name}</p>\r\n                  </div>\r\n                }\r\n\r\n                <a id='edit-btn' href={'#'}  onClick={() => handleRecipeEdit(recipe.id)}>Edit</a>\r\n                <a id='delete-btn' href={'#'}  onClick={() => handleRecipeDelete(recipe.id)}>Delete</a>\r\n            </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\category\\RecipeCategory.jsx",["92","93","94","95"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './recipe-cat.css';\r\n\r\n\r\nexport default function RecipeCategory(){\r\n  //gets recipes from that category\r\n  function handleCategoryclick(categoryId){\r\n    window.location.replace('/?category_id='+categoryId);\r\n  }\r\n\r\n  //get categories\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetch('https://api-recipes.luanabuca.com/categories/search', options)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setCategories(data['payload']['categories']);\r\n    })\r\n    .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    \r\n    <div className=\"recipe_category\">\r\n      <h3>Recipe Categories</h3>\r\n      <ul className='recipe-list'>\r\n        {categories.map(category => (\r\n          <li className='recipe-list-i' key={category.id}><a href=\"#\" onClick={() => handleCategoryclick(category.id)}>{category.name} ({category.recipe_count})</a></li>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n  )\r\n}\r\n\r\n","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\add-from\\AddForm.jsx",["96","97","98","99","100","101","102"],[],"import React, {useState, useEffect} from \"react\"; \r\nimport './add-form.css';\r\n\r\nexport default function AddForm(){\r\n\r\n  //check token\r\n  if(localStorage.getItem('token')==null){\r\n    window.location.replace('/sign-in');\r\n  }\r\n\r\n  //get data\r\n  const [recipeTitle, setRecipeTitle] = useState('');\r\n  const [recipeImage, setRecipeImage] = useState('');\r\n  const [recipeDescription, setRecipeDescription] = useState(\"\");\r\n  const [recipeComplexity, setRecipeComplexity] = useState(0);\r\n  const [recipeCategoryId, setRecipeCategoryId] = useState(0);\r\n\r\n  const [recipeError, setRecipeError] = useState(''); \r\n\r\n  //submit\r\n  function handleSubmit(){\r\n    let errFound = false;\r\n    let errDetails = '';\r\n\r\n    //validating form\r\n    if(recipeTitle==''){\r\n      errFound = true;\r\n      errDetails = errDetails + 'Title field cannot be empty\\n'\r\n    }\r\n    if(recipeImage==\"\"){\r\n      errFound = true;\r\n      errDetails = errDetails + \"Image field cannot be empty\\n\"\r\n    }\r\n    if(recipeDescription==\"\"){\r\n      errFound = true;\r\n      errDetails = errDetails + \"Description field cannot be empty\\n\"\r\n    }\r\n    if(recipeComplexity==0){\r\n      errFound = true;\r\n      errDetails = errDetails + \"Please choose the complexity\\n\"\r\n    }\r\n    if(recipeCategoryId==0){\r\n      errFound = true;\r\n      errDetails = errDetails + \"Please choose a category\\n\"\r\n    }\r\n\r\n    if(errFound){\r\n      //handle form error\r\n      setRecipeError(errDetails);\r\n    }else{\r\n      //saving the recipe and return to my account\r\n\r\n      const recipeAdd = {\r\n        title: recipeTitle,\r\n        image: recipeImage,\r\n        description: recipeDescription,\r\n        complexity: recipeComplexity,\r\n        category_id: recipeCategoryId\r\n      };\r\n\r\n      const optionsPost = {\r\n        method: 'POST',\r\n        body: JSON.stringify(recipeAdd),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'jwt': localStorage.getItem('token')\r\n        }\r\n      };\r\n\r\n      fetch('https://api-recipes.luanabuca.com/recipes', optionsPost)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if(data[\"error\"]==0){\r\n                        window.location.replace(\"/my-account\");\r\n                    }\r\n                })\r\n                .catch(error => console.error(error));\r\n    }\r\n    \r\n  };\r\n\r\n//get categories\r\n  const [categories, setCategories] =useState([]);\r\n    const optionsGet = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      fetch('https://api-recipes.luanabuca.com/categories/search', optionsGet)\r\n     .then(response => response.json())\r\n     .then(data => {\r\n      setCategories(data['payload']['categories']);\r\n     })\r\n     .catch(error => console.error(error));\r\n    }, []);\r\n\r\n  return (\r\n    <div className='add-form'>\r\n        <a href=\"/my-account\">&larr; Go back to my account</a>\r\n        <h2 id='form-title'>Add a new recipe</h2>\r\n        <div className=\"error-message\">{recipeError}</div>\r\n\r\n        <div className='form'>\r\n            {/* titlu */}\r\n            <label htmlFor=\"title\">Recipe title</label>\r\n            <input id='recipe-title' className='form-item' type=\"text\" placeholder='Recipe title'  onChange={(e) => setRecipeTitle(e.target.value)}/>\r\n\r\n            {/* descriere generala a retetei */}\r\n            <label htmlFor=\"description\">General description</label>\r\n            <p className='parag'><small>Here you will have to type a few words about your recipe, it's ingredients, and steps of your delicious recipe.</small></p>\r\n            <textarea id=\"description\" className='form-item' onChange={(e) => setRecipeDescription(e.target.value)}></textarea>\r\n\r\n            {/* img link */}\r\n            <label htmlFor=\"image\">Image link</label>\r\n            <input id='image' className='form-item' type=\"url\" placeholder='Image link' onChange={(e) => setRecipeImage(e.target.value)}/>\r\n\r\n            {/* category type */}\r\n            <label htmlFor=\"category_id\">Category</label>\r\n            <select id=\"category_id\" className='form-item' defaultValue={0} onChange={(e) => setRecipeCategoryId(e.target.value)}>\r\n              <option value={0}>--Choose category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.id}>{category.name}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* complexity level */}\r\n            <label htmlFor=\"complexity\">Complexity</label>\r\n            <select id='complexity' className='form-item' defaultValue={0} onChange={(e) => setRecipeComplexity(e.target.value)}>\r\n              <option value={0}>--Choose complexity</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n            </select>\r\n\r\n            {/* button de add reteta */}\r\n            <button id='add-btn' type='submit' onClick={handleSubmit}>Add Recipe</button>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\recipe-item\\RecipeItem.jsx",["103","104","105","106"],[],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './recipe-item.css'\r\n\r\nexport default function RecipeItem() {\r\n\r\n    //go to a specific recipe's page\r\n    function handleRecipeClick(recipeId){\r\n        window.location.replace('/recipe?recipe_id='+recipeId);\r\n    }\r\n\r\n    //listing title and url based on selected category\r\n    const queryParameters = new URLSearchParams(window.location.search)\r\n    const categoryId = queryParameters.get('category_id')\r\n\r\n    let listingtitle = '';\r\n    let recipeUrl = '';\r\n    \r\n    if(categoryId==null){\r\n        listingtitle = 'Latest recipes';\r\n        recipeUrl = 'https://api-recipes.luanabuca.com/recipes/public/search?limit=5';\r\n    }else{\r\n        listingtitle = 'Recipes for selected category';\r\n        recipeUrl = 'https://api-recipes.luanabuca.com/recipes/public/search?limit=-1&category_id='+categoryId;\r\n    }\r\n\r\n    //get recipe details for listing\r\n    const [recipes, setRecipes] = useState([]);\r\n\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(recipeUrl, options)\r\n         .then(response => response.json())\r\n         .then(data => {\r\n        setRecipes(data['payload']['recipes']);\r\n      })\r\n      .catch(error => console.log(error));\r\n    }, []);\r\n\r\n  return (\r\n    <div id='recipe-item-container'>\r\n        <h2 className='list-title'>{listingtitle}</h2>\r\n\r\n        {recipes.map(recipe => (\r\n            <div className='recipe-list-item' key={recipe.id}>\r\n                <h4>{recipe.title}</h4>\r\n                <img src={recipe.image} width='200px' alt='recipe photo'/>\r\n                <div id='listing-p'>\r\n                  <p>{recipe.description}</p>\r\n                </div>\r\n                <a id='listing-a' href={'#'} key={recipe.id} onClick={() => handleRecipeClick(recipe.id)}>read more</a>\r\n            </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\App.js",["107"],[],"import './App.css';\nimport HomePage from './home-page/HomePage';\nimport Navbar from './navbar/Navbar';\nimport RecipePage from './recipe-page/RecipePage';\nimport SignIn from './sign-in/SignIn';\nimport SignUp from './sign-up/SignUp';\nimport MyAccount from './my-account/MyAccount';\nimport AddForm from './add-from/AddForm';\nimport Logout from './logout/Logout';\nimport EditForm from './edit-form/EditForm';\n\nimport React from 'react';\nimport {Route, Routes, BrowserRouter as Router, BrowserRouter} from 'react-router-dom';\n\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n          <Navbar />\n\n          <Routes>\n           <Route path='/' exact element={<HomePage />} />\n           <Route path='/recipe' element={<RecipePage/>} />\n           <Route path='/sign-in' element={<SignIn/>} />\n           <Route path='/sign-up' element={<SignUp/>} />\n           <Route path='/my-account' element={<MyAccount/>} />\n           <Route path='/add-form' element={<AddForm/>} />\n           <Route path='/logout' element={<Logout/>}/>\n           <Route path='/edit-form' element={<EditForm/>}/>\n          </Routes>\n      </BrowserRouter>\n  );\n}","D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\logout\\Logout.jsx",[],[],"D:\\Personale\\_festuff\\final-project\\my-recipe\\src\\edit-form\\EditForm.jsx",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],[],"import React, {useState, useEffect} from \"react\"; \r\nimport './edit-form.css';\r\n\r\nexport default function EditForm(){\r\n    //check token\r\n    if(localStorage.getItem('token')==null){\r\n        window.location.replace('/sign-in');\r\n    }\r\n\r\n    const queryParameters = new URLSearchParams(window.location.search)\r\n    const recipe_id = queryParameters.get(\"recipeId\")\r\n\r\n\r\n    const [recipeTitle, setRecipeTitle] = useState(\"\");\r\n    const [recipeImage, setRecipeImage] = useState(\"\");\r\n    const [recipeDescription, setRecipeDescription] = useState(\"\");\r\n    const [recipeComplexity, setRecipeComplexity] = useState(0);\r\n    const [recipeCategoryId, setRecipeCategoryId] = useState(0);\r\n\r\n    const [recipeError, setRecipeError] = useState(\"\");\r\n\r\n    //getting the categories\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n            fetch('https://api-recipes.luanabuca.com/categories/search', options)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    //console.log(data[\"payload\"][\"categories\"]);\r\n                    setCategories(data[\"payload\"][\"categories\"]);\r\n                })\r\n                .catch(error => console.error(error));\r\n        }, []) \r\n\r\n\r\n    //getting the recipe data\r\n    const recipeUrl = \"https://api-recipes.luanabuca.com/recipes/\"+recipe_id;\r\n\r\n    const [recipe, setRecipe] = useState([]);\r\n\r\n    const optionsRecipe = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'jwt': localStorage.getItem(\"token\")\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n            fetch(recipeUrl, optionsRecipe)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setRecipe(data[\"payload\"][\"recipe\"]);\r\n                })\r\n                .catch(error => console.error(error));\r\n\r\n        }, []) \r\n\r\n\r\n    function handleRecipeUpdate(){\r\n        let uRecipeTitle = document.getElementById(\"recipe-title\").value;\r\n        let uRecipeImage = document.getElementById(\"image\").value;\r\n        let uRecipeDescription = document.getElementById(\"description\").value;\r\n        let uRecipeComplexity = document.getElementById(\"complexity\").value;\r\n        let uRecipeCategoryId = document.getElementById(\"category_id\").value;\r\n\r\n        let errFound = false;\r\n        let errDetails = \"\";\r\n\r\n        //doing form validation\r\n        if(uRecipeTitle==\"\"){\r\n            errFound = true;\r\n            errDetails = errDetails + 'Title field can not be empty\\n'\r\n        }\r\n        if(uRecipeImage==\"\"){\r\n            errFound = true;\r\n            errDetails = errDetails + \"Image field can not be empty\\n\"\r\n        }\r\n        if(uRecipeDescription==\"\"){\r\n            errFound = true;\r\n            errDetails = errDetails + \"Description field can not be empty\\n\"\r\n        }\r\n        if(uRecipeComplexity==0){\r\n            errFound = true;\r\n            errDetails = errDetails + \"Please choose the complexity\\n\"\r\n        }\r\n        if(uRecipeCategoryId==0){\r\n            errFound = true;\r\n            errDetails = errDetails + \"Please choose a category\\n\"\r\n        }\r\n\r\n        if(errFound){\r\n            //handle form error\r\n            setRecipeError(errDetails);\r\n        }else{\r\n            //saving the recipe and return to recipe list (my account)\r\n\r\n            const recipeUpdate = {\r\n                title: uRecipeTitle,\r\n                image: uRecipeImage,\r\n                description: uRecipeDescription,\r\n                complexity: uRecipeComplexity,\r\n                category_id: uRecipeCategoryId\r\n            };\r\n            console.log('title is: '+ uRecipeTitle);\r\n            console.log(JSON.stringify(recipeUpdate))\r\n            const optionsUpdate = {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'jwt': localStorage.getItem(\"token\")\r\n                },\r\n                body: JSON.stringify(recipeUpdate)\r\n            };\r\n\r\n\r\n\r\n            fetch('https://api-recipes.luanabuca.com/recipes/'+recipe_id, optionsUpdate)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if(data[\"error\"]==0){\r\n                        window.location.replace(\"/my-account\");\r\n                    }\r\n                })\r\n                .catch(error => console.error(error));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"edit-form\">\r\n            <a href=\"/my-account\">&larr; Go back to my account</a>\r\n            <h2 id=\"edit-title\">Edit this recipe</h2>\r\n            <div className=\"error-message\">{recipeError}</div>\r\n\r\n            <div className=\"form\">\r\n\r\n                <label htmlFor=\"recipe-title\">Recipe title</label>\r\n                <input type=\"text\" id=\"recipe-title\" className=\"form-item\" placeholder=\"Recipe title\" defaultValue={recipe.title}/>\r\n\r\n                <label htmlFor=\"description\">General description</label>\r\n                <p className='parag'><small>Here you will have to type a few words about your recipe, it's ingredients, and steps of your delicious recipe.</small></p>\r\n                <textarea id=\"description\" className=\"form-item\" defaultValue={recipe.description} ></textarea>\r\n\r\n                <label htmlFor=\"image\">Image link</label>\r\n                <input type=\"url\" id=\"image\" className=\"form-item\" placeholder=\"Image link\" defaultValue={recipe.image}/>\r\n\r\n                {categories && recipe.category &&\r\n                    <div>\r\n                        <label htmlFor=\"category_id\">Category</label>\r\n                        <select id=\"category_id\" className=\"form-item\" defaultValue={recipe.category.id}>\r\n                            <option value={0}>--Choose category</option>\r\n                            {categories.map(category => (\r\n                                <option key={category.id} value={category.id}>{category.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                }\r\n                \r\n                {recipe.complexity &&\r\n                <div>\r\n                <label htmlFor=\"complexity\">Complexity</label>\r\n                <select id=\"complexity\" className=\"form-item\" defaultValue={recipe.complexity}>\r\n                    <option value={0}>--Choose complexity</option>\r\n                    <option value={1}>1</option>\r\n                    <option value={2}>2</option>\r\n                    <option value={3}>3</option>\r\n                </select>\r\n                </div>\r\n                 }\r\n\r\n                <button id=\"edit-form-btn\" type=\"submit\" onClick={handleRecipeUpdate}>Update Recipe</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":37,"column":9,"nodeType":"134","endLine":37,"endColumn":100},{"ruleId":"135","severity":1,"message":"136","line":42,"column":5,"nodeType":"134","endLine":42,"endColumn":78},{"ruleId":"137","severity":1,"message":"138","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":15,"column":18,"nodeType":"143","messageId":"144","endLine":15,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":19,"column":18,"nodeType":"143","messageId":"144","endLine":19,"endColumn":20},{"ruleId":"128","severity":1,"message":"145","line":47,"column":8,"nodeType":"130","endLine":47,"endColumn":10,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"142","line":56,"column":73,"nodeType":"143","messageId":"144","endLine":56,"endColumn":75},{"ruleId":"132","severity":1,"message":"133","line":94,"column":17,"nodeType":"134","endLine":94,"endColumn":90},{"ruleId":"132","severity":1,"message":"133","line":95,"column":17,"nodeType":"134","endLine":95,"endColumn":94},{"ruleId":"137","severity":1,"message":"147","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"137","severity":1,"message":"148","line":2,"column":16,"nodeType":"139","messageId":"140","endLine":2,"endColumn":27},{"ruleId":"128","severity":1,"message":"145","line":28,"column":6,"nodeType":"130","endLine":28,"endColumn":8,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"133","line":36,"column":59,"nodeType":"134","endLine":36,"endColumn":120},{"ruleId":"141","severity":1,"message":"142","line":26,"column":19,"nodeType":"143","messageId":"144","endLine":26,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":30,"column":19,"nodeType":"143","messageId":"144","endLine":30,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":34,"column":25,"nodeType":"143","messageId":"144","endLine":34,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":38,"column":24,"nodeType":"143","messageId":"144","endLine":38,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":42,"column":24,"nodeType":"143","messageId":"144","endLine":42,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":73,"column":37,"nodeType":"143","messageId":"144","endLine":73,"endColumn":39},{"ruleId":"128","severity":1,"message":"150","line":98,"column":8,"nodeType":"130","endLine":98,"endColumn":10,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"147","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":44,"column":8,"nodeType":"130","endLine":44,"endColumn":10,"suggestions":"152"},{"ruleId":"135","severity":1,"message":"136","line":53,"column":17,"nodeType":"134","endLine":53,"endColumn":75},{"ruleId":"132","severity":1,"message":"133","line":57,"column":17,"nodeType":"134","endLine":57,"endColumn":107},{"ruleId":"137","severity":1,"message":"153","line":13,"column":41,"nodeType":"139","messageId":"140","endLine":13,"endColumn":47},{"ruleId":"137","severity":1,"message":"154","line":14,"column":12,"nodeType":"139","messageId":"140","endLine":14,"endColumn":23},{"ruleId":"137","severity":1,"message":"155","line":14,"column":25,"nodeType":"139","messageId":"140","endLine":14,"endColumn":39},{"ruleId":"137","severity":1,"message":"156","line":15,"column":12,"nodeType":"139","messageId":"140","endLine":15,"endColumn":23},{"ruleId":"137","severity":1,"message":"157","line":15,"column":25,"nodeType":"139","messageId":"140","endLine":15,"endColumn":39},{"ruleId":"137","severity":1,"message":"158","line":16,"column":12,"nodeType":"139","messageId":"140","endLine":16,"endColumn":29},{"ruleId":"137","severity":1,"message":"159","line":16,"column":31,"nodeType":"139","messageId":"140","endLine":16,"endColumn":51},{"ruleId":"137","severity":1,"message":"160","line":17,"column":12,"nodeType":"139","messageId":"140","endLine":17,"endColumn":28},{"ruleId":"137","severity":1,"message":"161","line":17,"column":30,"nodeType":"139","messageId":"140","endLine":17,"endColumn":49},{"ruleId":"137","severity":1,"message":"162","line":18,"column":12,"nodeType":"139","messageId":"140","endLine":18,"endColumn":28},{"ruleId":"137","severity":1,"message":"163","line":18,"column":30,"nodeType":"139","messageId":"140","endLine":18,"endColumn":49},{"ruleId":"128","severity":1,"message":"145","line":40,"column":12,"nodeType":"130","endLine":40,"endColumn":14,"suggestions":"164"},{"ruleId":"128","severity":1,"message":"165","line":64,"column":12,"nodeType":"130","endLine":64,"endColumn":14,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"142","line":78,"column":24,"nodeType":"143","messageId":"144","endLine":78,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":82,"column":24,"nodeType":"143","messageId":"144","endLine":82,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":86,"column":30,"nodeType":"143","messageId":"144","endLine":86,"endColumn":32},{"ruleId":"141","severity":1,"message":"142","line":90,"column":29,"nodeType":"143","messageId":"144","endLine":90,"endColumn":31},{"ruleId":"141","severity":1,"message":"142","line":94,"column":29,"nodeType":"143","messageId":"144","endLine":94,"endColumn":31},{"ruleId":"141","severity":1,"message":"142","line":128,"column":37,"nodeType":"143","messageId":"144","endLine":128,"endColumn":39},"no-new-object",["167"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'options' and 'recipeUrl'. Either include them or remove the dependency array.","ArrayExpression",["168"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["169"],"'Link' is defined but never used.","'useNavigate' is defined but never used.",["170"],"React Hook useEffect has a missing dependency: 'optionsGet'. Either include it or remove the dependency array.",["171"],["172"],"'Router' is defined but never used.","'recipeTitle' is assigned a value but never used.","'setRecipeTitle' is assigned a value but never used.","'recipeImage' is assigned a value but never used.","'setRecipeImage' is assigned a value but never used.","'recipeDescription' is assigned a value but never used.","'setRecipeDescription' is assigned a value but never used.","'recipeComplexity' is assigned a value but never used.","'setRecipeComplexity' is assigned a value but never used.","'recipeCategoryId' is assigned a value but never used.","'setRecipeCategoryId' is assigned a value but never used.",["173"],"React Hook useEffect has missing dependencies: 'optionsRecipe' and 'recipeUrl'. Either include them or remove the dependency array.",["174"],"no-object-constructor",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"180","fix":"181"},{"desc":"175","fix":"182"},{"desc":"177","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [options, recipeUrl]",{"range":"186","text":"187"},"Update the dependencies array to be: [options]",{"range":"188","text":"189"},{"range":"190","text":"189"},"Update the dependencies array to be: [optionsGet]",{"range":"191","text":"192"},{"range":"193","text":"187"},{"range":"194","text":"189"},"Update the dependencies array to be: [optionsRecipe, recipeUrl]",{"range":"195","text":"196"},[803,805],"[options, recipeUrl]",[1165,1167],"[options]",[784,786],[2816,2818],"[optionsGet]",[1382,1384],[1382,1384],[2047,2049],"[optionsRecipe, recipeUrl]"]