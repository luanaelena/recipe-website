{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personale\\\\_festuff\\\\final-project\\\\my-recipe\\\\src\\\\auth\\\\register\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(null);\n  function register(event) {\n    event.preventDefault();\n    const body = {\n      email,\n      username,\n      password\n    };\n\n    //aici bag fetch\n  }\n\n  useEffect(() => {\n    function validatePassword(password) {\n      const specialChar = ['*', '#', '@'];\n      if (password <= 8) {\n        setPasswordError('Password must be at least 8 characters.');\n        return;\n      }\n      let hasSpecialChar = false;\n      for (let character of password) {\n        const hasChar = specialChar.includes(character);\n        if (hasChar) {\n          hasSpecialChar = true;\n        }\n      }\n      if (!hasSpecialChar) {\n        setPasswordError('Your password must have at least one special character.', specialChar);\n      } else {\n        setPasswordError(null);\n      }\n    }\n    validatePassword(password);\n  }, [password]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicUsername\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        children: \"We'll never share your email with anyone.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(Form.Text, {\n      children: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Create account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"+WRLpcMJN6nbQtlYyLoaIQo2msM=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useEffect","useState","Button","Form","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","passwordError","setPasswordError","register","event","preventDefault","body","validatePassword","specialChar","hasSpecialChar","character","hasChar","includes","style","maxWidth","margin","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","target","Text","_c","$RefreshReg$"],"sources":["D:/Personale/_festuff/final-project/my-recipe/src/auth/register/Register.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function Register(){\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordError, setPasswordError] = useState(null);\r\n\r\n    function register(event){\r\n        event.preventDefault();\r\n        const body = {\r\n            email,\r\n            username,\r\n            password,\r\n        };\r\n\r\n        //aici bag fetch\r\n    }\r\n\r\n    useEffect(() => {\r\n        function validatePassword(password){\r\n            const specialChar = ['*', '#', '@'];\r\n\r\n            if(password <= 8){\r\n                setPasswordError('Password must be at least 8 characters.');\r\n                return;\r\n            }\r\n\r\n            let hasSpecialChar = false;\r\n\r\n            for(let character of password){\r\n                const hasChar = specialChar.includes(character);\r\n\r\n                if(hasChar){\r\n                    hasSpecialChar = true;\r\n                }\r\n            }\r\n\r\n            if(!hasSpecialChar){\r\n                setPasswordError('Your password must have at least one special character.', specialChar)\r\n            }else{\r\n                setPasswordError(null);\r\n            }\r\n        }\r\n\r\n        validatePassword(password);\r\n    }, [password]);\r\n\r\n    return(\r\n        <Form style={{maxWidth: '800px', margin: '0 auto'}} onSubmit={register}>\r\n            <Form.Group className='mb-3' controlId='formBasicUsername'>\r\n                <Form.Label>Username </Form.Label>\r\n                <Form.Control \r\n                  type= 'text'\r\n                  placeholder= 'Enter your username'\r\n                  value= {username}\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-3' controlId='formBasicEmail'>\r\n                <Form.Label>Email address </Form.Label>\r\n                <Form.Control \r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                />\r\n                <Form.Text>We'll never share your email with anyone.</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-3' controlId='formBasicPassword'>\r\n                <Form.Label>Password </Form.Label>\r\n                <Form.Control \r\n                  type='password'\r\n                  placeholder= 'Password'\r\n                  value= {password}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            {passwordError && (\r\n                <Form.Text>{passwordError}</Form.Text>\r\n            )}\r\n\r\n            <Button type='submit'>Create account</Button>\r\n        </Form>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}